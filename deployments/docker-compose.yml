version: "3.9"
services:
  server:
      container_name: server
      build:
        context: ../
        dockerfile: ./build/Dockerfile
      environment:
        PORT: ${PORT}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      ports:
      - "${PORT}:${PORT}"
      restart: always
      volumes:
        - type: bind
          source: ../deployments
          target: /deployments
        - type: bind
          source: ../configs
          target: /configs
      depends_on:
        - postgres
      networks:
        - postgres

  postgres:
    container_name: postgres_container
    image: postgres:13.3
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - .:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - postgres
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:6.8
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - ./pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    depends_on:
      - postgres
    networks:
      - postgres

  swagger-ui:
    container_name: "swagger-ui"
    image: swaggerapi/swagger-ui
    ports:
      - "${DOCS_PORT}:8080"
    volumes:
      - type: bind
        source: ../api
        target: /api
    environment:
      SWAGGER_JSON: /api/oas.yml

networks:
  postgres:
    driver: bridge