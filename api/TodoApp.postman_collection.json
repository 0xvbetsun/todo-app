{
	"info": {
		"_postman_id": "ada168e7-3afe-4711-b442-75e52765cbd2",
		"name": "Todo App",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Sign Up",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"number\" },",
									"        \"name\": { \"type\": \"string\" },",
									"        \"username\": { \"type\": \"string\" }",
									"    },",
									"    \"required\": [\"id\", \"name\", \"username\"]",
									"};",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Validate schema\", () => {",
									"    pm.response.to.have.jsonSchema(schema)",
									"})",
									"pm.test(\"Response time is less than 200ms\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Content-Type is present\", () => {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"username\", pm.variables.replaceIn(\"{{$randomFirstName}}\" + \"{{$randomLastName}}\"));",
									"pm.collectionVariables.set(\"name\", pm.variables.replaceIn(\"{{$randomFirstName}}\"));",
									"pm.collectionVariables.set(\"password\", pm.variables.replaceIn(\"{{$randomPassword}}\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{username}}\",\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/auth/sign-up",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"auth",
								"sign-up"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"{{username}}\",\n    \"name\": \"{{name}}\",\n    \"password\": \"{{password}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/auth/sign-up",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"auth",
										"sign-up"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Fri, 06 May 2022 14:44:49 GMT"
								},
								{
									"key": "Content-Length",
									"value": "53"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 45,\n    \"name\": \"Delpha\",\n    \"username\": \"JoannyRuecker\"\n}"
						},
						{
							"name": "Err dupl username",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"vbetsun1\",\n    \"name\": \"vlad1\",\n    \"password\": \"pass123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/auth/sign-up",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"auth",
										"sign-up"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Mon, 02 May 2022 16:22:44 GMT"
								},
								{
									"key": "Content-Length",
									"value": "106"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"ERROR: duplicate key value violates unique constraint \\\"users_username_key\\\" (SQLSTATE 23505)\"\n}"
						}
					]
				},
				{
					"name": "Sign In",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"token\": { \"type\": \"string\" }",
									"    },",
									"    \"required\": [\"token\"]",
									"};",
									"",
									"pm.test(\"Validate schema\", () => {",
									"    pm.response.to.have.jsonSchema(schema)",
									"})",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Content-Type is present\", () => {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.environment.set(\"authToken\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"username\": \"{{username}}\",\n   \"password\": \"{{password}}\"\n}\n    ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/auth/sign-in",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"auth",
								"sign-in"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"vbetsun\",\n    \"password\": \"pass123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/auth/sign-in",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"auth",
										"sign-in"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Mon, 02 May 2022 16:27:39 GMT"
								},
								{
									"key": "Content-Length",
									"value": "157"
								}
							],
							"cookie": [],
							"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NTE1NTIwNTksImlhdCI6MTY1MTUwODg1OSwidXNlcl9pZCI6Nn0.V63SimZCJn8PKuwnyH6Y0hwK4G_u4FFILRwIxVhtlco\"\n}"
						},
						{
							"name": "Err incorrect pass",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"vbetsun\",\n    \"password\": \"incorrectPass\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/auth/sign-in",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"auth",
										"sign-in"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Mon, 02 May 2022 16:33:16 GMT"
								},
								{
									"key": "Content-Length",
									"value": "39"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"sql: no rows in result set\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Lists",
			"item": [
				{
					"name": "Create List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"number\" },",
									"        \"title\": { \"type\": \"string\" },",
									"        \"description\": { \"type\": \"string\" }",
									"    },",
									"    \"required\": [\"id\", \"title\", \"description\"]",
									"};",
									"",
									"pm.test(\"Validate schema\", () => {",
									"    pm.response.to.have.jsonSchema(schema)",
									"})",
									"pm.test(\"Status code is 201\", () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Content-Type is present\", () => {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.collectionVariables.set(\"listID\", pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"{{$randomLoremWords}}\",\n    \"description\": \"{{$randomLoremSentence}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/lists",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"lists"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"{{$randomLoremWords}}\",\n    \"description\": \"{{$randomLoremSentence}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Fri, 06 May 2022 15:28:03 GMT"
								},
								{
									"key": "Content-Length",
									"value": "120"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 103,\n    \"title\": \"rerum rerum illum\",\n    \"description\": \"Dicta omnis aliquid minus quia fugiat molestiae minima officiis.\"\n}"
						},
						{
							"name": "Err unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"{{$randomLoremWords}}\",\n    \"description\": \"{{$randomLoremSentence}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 09:24:13 GMT"
								},
								{
									"key": "Content-Length",
									"value": "30"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"empty auth header\"\n}"
						}
					]
				},
				{
					"name": "Update List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"number\" },",
									"        \"title\": { \"type\": \"string\" },",
									"        \"description\": { \"type\": \"string\" }",
									"    },",
									"    \"required\": [\"id\", \"title\", \"description\"]",
									"};",
									"",
									"pm.test(\"Validate schema\", () => {",
									"    pm.response.to.have.jsonSchema(schema)",
									"})",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"{{$randomLoremWords}}\",\n    \"description\": \"{{$randomLoremSentence}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/lists/:listID",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"lists",
								":listID"
							],
							"variable": [
								{
									"key": "listID",
									"value": "{{listID}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"{{$randomLoremWords}}\",\n    \"description\": \"{{$randomLoremSentence}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists/:listID",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists",
										":listID"
									],
									"variable": [
										{
											"key": "listID",
											"value": "{{listID}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Fri, 06 May 2022 15:28:06 GMT"
								},
								{
									"key": "Content-Length",
									"value": "102"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 103,\n    \"title\": \"incidunt architecto blanditiis\",\n    \"description\": \"Sequi esse quisquam corporis sit.\"\n}"
						},
						{
							"name": "Err unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"{{$randomLoremWords}}\",\n    \"description\": \"{{$randomLoremSentence}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 09:24:13 GMT"
								},
								{
									"key": "Content-Length",
									"value": "30"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"empty auth header\"\n}"
						}
					]
				},
				{
					"name": "All Lists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"data\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"object\",",
									"                \"properties\": {",
									"                    \"id\": { \"type\": \"number\" },",
									"                    \"title\": { \"type\": \"string\" },",
									"                    \"description\": { \"type\": \"string\" }",
									"                },",
									"                \"required\": [\"id\", \"title\", \"description\"]",
									"            }",
									"        }",
									"    },",
									"    \"required\": [\"data\"]",
									"};",
									"",
									"pm.test(\"Validate schema\", () => {",
									"    pm.response.to.have.jsonSchema(schema)",
									"})",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Content-Type is present\", () => {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"List should have previously created 'listID'\", () => {",
									"    const ids = pm.response.json().data.map(el => el.id)",
									"    pm.expect(ids).to.include(pm.collectionVariables.get(\"listID\"))",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/lists",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"lists"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 09:23:21 GMT"
								},
								{
									"key": "Content-Length",
									"value": "114"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"title\": \"vero et eum\",\n            \"description\": \"Voluptate at quo numquam labore quia praesentium rerum.\"\n        }\n    ]\n}"
						},
						{
							"name": "Err unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 09:24:55 GMT"
								},
								{
									"key": "Content-Length",
									"value": "30"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"empty auth header\"\n}"
						}
					]
				},
				{
					"name": "List By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"number\" },",
									"        \"title\": { \"type\": \"string\" },",
									"        \"description\": { \"type\": \"string\" }",
									"    },",
									"    \"required\": [\"id\", \"title\", \"description\"]",
									"};",
									"",
									"pm.test(\"Validate schema\", () => {",
									"    pm.response.to.have.jsonSchema(schema)",
									"})",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Content-Type is present\", () => {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"List should have correct 'listID'\", () => {",
									"    pm.expect(pm.response.json().id).to.be.equal(pm.collectionVariables.get(\"listID\"))",
									"})",
									"postman.setNextRequest(\"Create Todo\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/lists/:listID",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"lists",
								":listID"
							],
							"variable": [
								{
									"key": "listID",
									"value": "{{listID}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists/:listID",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists",
										":listID"
									],
									"variable": [
										{
											"key": "listID",
											"value": "{{listID}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 18:31:08 GMT"
								},
								{
									"key": "Content-Length",
									"value": "103"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"title\": \"vero et eum\",\n    \"description\": \"Voluptate at quo numquam labore quia praesentium rerum.\"\n}"
						},
						{
							"name": "Err unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 09:24:55 GMT"
								},
								{
									"key": "Content-Length",
									"value": "30"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"empty auth header\"\n}"
						},
						{
							"name": "Err parsing listID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists/:listID",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists",
										":listID"
									],
									"variable": [
										{
											"key": "listID",
											"value": "{{listID}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 17:00:12 GMT"
								},
								{
									"key": "Content-Length",
									"value": "29"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"listID not found\"\n}"
						}
					]
				},
				{
					"name": "Remove List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"todoID = pm.collectionVariables.get(\"todoID\");",
									"if (!todoID) {",
									"    postman.setNextRequest(null)",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/lists/:listID",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"lists",
								":listID"
							],
							"variable": [
								{
									"key": "listID",
									"value": "{{listID}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists/:listID",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists",
										":listID"
									],
									"variable": [
										{
											"key": "listID",
											"value": "{{listID}}"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 21:07:57 GMT"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "Err unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 09:24:55 GMT"
								},
								{
									"key": "Content-Length",
									"value": "30"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"empty auth header\"\n}"
						},
						{
							"name": "Err not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists/:listID",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists",
										":listID"
									],
									"variable": [
										{
											"key": "listID",
											"value": "{{listID}}"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 20:58:02 GMT"
								},
								{
									"key": "Content-Length",
									"value": "32"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Resource not found.\"\n}"
						},
						{
							"name": "Err parsing listID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists/:listID",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists",
										":listID"
									],
									"variable": [
										{
											"key": "listID",
											"value": "{{listID}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 17:00:12 GMT"
								},
								{
									"key": "Content-Length",
									"value": "29"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"listID not found\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Todos",
			"item": [
				{
					"name": "Create Todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"number\" },",
									"        \"title\": { \"type\": \"string\" },",
									"        \"description\": { \"type\": \"string\" },",
									"        \"done\": { \"type\": \"boolean\" }",
									"    },",
									"    \"required\": [\"id\", \"title\", \"description\", \"done\"]",
									"};",
									"",
									"pm.test(\"Validate schema\", () => {",
									"    pm.response.to.have.jsonSchema(schema)",
									"})",
									"pm.test(\"Status code is 201\", () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Content-Type is present\", () => {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.collectionVariables.set(\"todoID\", pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"{{$randomLoremWords}}\",\n    \"description\": \"{{$randomLoremSentence}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/lists/:listID/todos",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"lists",
								":listID",
								"todos"
							],
							"variable": [
								{
									"key": "listID",
									"value": "{{listID}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"{{$randomLoremWords}}\",\n    \"description\": \"{{$randomLoremSentence}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists/:listID/todos",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists",
										":listID",
										"todos"
									],
									"variable": [
										{
											"key": "listID",
											"value": "{{listID}}"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Fri, 06 May 2022 15:30:47 GMT"
								},
								{
									"key": "Content-Length",
									"value": "93"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 7,\n    \"title\": \"ut sed cum\",\n    \"description\": \"Explicabo eum nulla non eligendi.\",\n    \"done\": false\n}"
						},
						{
							"name": "Err unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"{{$randomLoremWords}}\",\n    \"description\": \"{{$randomLoremSentence}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 09:24:13 GMT"
								},
								{
									"key": "Content-Length",
									"value": "30"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"empty auth header\"\n}"
						}
					]
				},
				{
					"name": "Update Todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"number\" },",
									"        \"title\": { \"type\": \"string\" },",
									"        \"description\": { \"type\": \"string\" },",
									"        \"done\": { \"type\": \"boolean\" }",
									"    },",
									"    \"required\": [\"id\", \"title\", \"description\", \"done\"]",
									"};",
									"",
									"pm.test(\"Validate schema\", () => {",
									"    pm.response.to.have.jsonSchema(schema)",
									"})",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"{{$randomLoremWords}}\",\n    \"description\": \"{{$randomLoremSentence}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/lists/:listID/todos/:todoID",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"lists",
								":listID",
								"todos",
								":todoID"
							],
							"variable": [
								{
									"key": "listID",
									"value": "{{listID}}"
								},
								{
									"key": "todoID",
									"value": "{{todoID}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"{{$randomLoremWords}}\",\n    \"description\": \"{{$randomLoremSentence}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists/:listID/todos/:todoID",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists",
										":listID",
										"todos",
										":todoID"
									],
									"variable": [
										{
											"key": "listID",
											"value": "{{listID}}"
										},
										{
											"key": "todoID",
											"value": "{{todoID}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Fri, 06 May 2022 15:32:00 GMT"
								},
								{
									"key": "Content-Length",
									"value": "96"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 7,\n    \"title\": \"vitae nulla et\",\n    \"description\": \"Modi quia esse maiores delectus.\",\n    \"done\": false\n}"
						},
						{
							"name": "Err unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"{{$randomLoremWords}}\",\n    \"description\": \"{{$randomLoremSentence}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 09:24:13 GMT"
								},
								{
									"key": "Content-Length",
									"value": "30"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"empty auth header\"\n}"
						}
					]
				},
				{
					"name": "All Todos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"data\": {",
									"            \"type\": \"array\",",
									"            \"items\": {",
									"                \"type\": \"object\",",
									"                \"properties\": {",
									"                    \"id\": { \"type\": \"number\" },",
									"                    \"title\": { \"type\": \"string\" },",
									"                    \"description\": { \"type\": \"string\" },",
									"                    \"done\": { \"type\": \"boolean\" },",
									"                },",
									"                \"required\": [\"id\", \"title\", \"description\", \"done\"]",
									"            }",
									"        }",
									"    },",
									"    \"required\": [\"data\"]",
									"};",
									"",
									"pm.test(\"Validate schema\", () => {",
									"    pm.response.to.have.jsonSchema(schema)",
									"})",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Content-Type is present\", () => {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"List should have previously created 'todoID'\", () => {",
									"    const ids = pm.response.json().data.map(el => el.id)",
									"    pm.expect(ids).to.include(pm.collectionVariables.get(\"todoID\"))",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/lists/:listID/todos",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"lists",
								":listID",
								"todos"
							],
							"variable": [
								{
									"key": "listID",
									"value": "{{listID}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists/:listID/todos",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists",
										":listID",
										"todos"
									],
									"variable": [
										{
											"key": "listID",
											"value": "{{listID}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Wed, 04 May 2022 12:01:53 GMT"
								},
								{
									"key": "Content-Length",
									"value": "129"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": 2,\n            \"title\": \"ut aliquid quos\",\n            \"description\": \"Incidunt sunt iusto facilis nostrum autem sequi iure.\",\n            \"done\": false\n        }\n    ]\n}"
						},
						{
							"name": "Err unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 09:24:55 GMT"
								},
								{
									"key": "Content-Length",
									"value": "30"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"empty auth header\"\n}"
						}
					]
				},
				{
					"name": "Todo By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": { \"type\": \"number\" },",
									"        \"title\": { \"type\": \"string\" },",
									"        \"description\": { \"type\": \"string\" },",
									"        \"done\": { \"type\": \"boolean\" }",
									"    },",
									"    \"required\": [\"id\", \"title\", \"description\", \"done\"]",
									"};",
									"",
									"pm.test(\"Validate schema\", () => {",
									"    pm.response.to.have.jsonSchema(schema)",
									"})",
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.test(\"Content-Type is present\", () => {",
									"    pm.response.to.have.header(\"Content-Type\");",
									"});",
									"pm.test(\"List should have correct 'todoID'\", () => {",
									"    pm.expect(pm.response.json().id).to.be.equal(pm.collectionVariables.get(\"todoID\"))",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/lists/:listID/todos/:todoID",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"lists",
								":listID",
								"todos",
								":todoID"
							],
							"variable": [
								{
									"key": "listID",
									"value": "{{listID}}"
								},
								{
									"key": "todoID",
									"value": "{{todoID}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists/:listID",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists",
										":listID"
									],
									"variable": [
										{
											"key": "listID",
											"value": "{{listID}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 18:31:08 GMT"
								},
								{
									"key": "Content-Length",
									"value": "103"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"title\": \"vero et eum\",\n    \"description\": \"Voluptate at quo numquam labore quia praesentium rerum.\"\n}"
						},
						{
							"name": "Err unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 09:24:55 GMT"
								},
								{
									"key": "Content-Length",
									"value": "30"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"empty auth header\"\n}"
						},
						{
							"name": "Err parsing listID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists/:listID",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists",
										":listID"
									],
									"variable": [
										{
											"key": "listID",
											"value": "{{listID}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 17:00:12 GMT"
								},
								{
									"key": "Content-Length",
									"value": "29"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"listID not found\"\n}"
						}
					]
				},
				{
					"name": "Remove Todo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", () => {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.test(\"Response time is less than 200ms\", () => {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"pm.collectionVariables.unset(\"todoID\");",
									"postman.setNextRequest(\"Remove List\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/api/lists/:listID/todos/:todoID",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"api",
								"lists",
								":listID",
								"todos",
								":todoID"
							],
							"variable": [
								{
									"key": "listID",
									"value": "{{listID}}"
								},
								{
									"key": "todoID",
									"value": "{{todoID}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists/:listID",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists",
										":listID"
									],
									"variable": [
										{
											"key": "listID",
											"value": "{{listID}}"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 21:07:57 GMT"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "Err unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 09:24:55 GMT"
								},
								{
									"key": "Content-Length",
									"value": "30"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"empty auth header\"\n}"
						},
						{
							"name": "Err not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists/:listID",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists",
										":listID"
									],
									"variable": [
										{
											"key": "listID",
											"value": "{{listID}}"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 20:58:02 GMT"
								},
								{
									"key": "Content-Length",
									"value": "32"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"Resource not found.\"\n}"
						},
						{
							"name": "Err parsing listID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/api/lists/:listID",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"api",
										"lists",
										":listID"
									],
									"variable": [
										{
											"key": "listID",
											"value": "{{listID}}"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 03 May 2022 17:00:12 GMT"
								},
								{
									"key": "Content-Length",
									"value": "29"
								}
							],
							"cookie": [],
							"body": "{\n    \"error\": \"listID not found\"\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "listID",
			"value": ""
		}
	]
}